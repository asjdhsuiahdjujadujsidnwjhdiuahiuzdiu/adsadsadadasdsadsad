const log = e => console.log("%c[INTANT] " + e, "color: #9A00C0");
var stepa = localStorage.getItem("stepa");
// CHANGE YOUR FPS HERE!!!@$$#@$#@$ FPS HERE &*^**^*^*&^% CHANGE FPS BELOW!!!!!
const getDesiredFPS = () => 180;
// ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
// ^^^^^^^ CHANGE FPS ^^^^^^^^^^^^^^^^
// ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
// ^^^^^^^ 240 IS THE MAX ^^^^^^^^^^^^
// ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
// ^^^ 120 or 180 is recommended ^^^^^
// ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

(function() {
    'use strict';

    const jjj = () => 15
    const jjjjjj = () => 4

    const jjjj = () => {
    if (getDesiredFPS() > jjj() * jjjjjj() * jjjjjj()) {
        return jjjjjj() * jjj() * jjjjjj()}
    if (getDesiredFPS() < jjjjjj() * jjj()) {
        return jjj() * jjjjjj()}
    else {
        return getDesiredFPS()}
    }

    const jjjjj = jjjj();

    // Helper function to inject a script into the page context
    function injectScript(fn) {
        const script = document.createElement('script');
        script.textContent = `(${fn})();`;
        document.documentElement.appendChild(script);
        script.remove();
    }

    // Function to override the game's requestAnimationFrame to achieve the desired FPS
    function j() {
        const originalRequestAnimationFrame = window.requestAnimationFrame;
        let lastTime = 0;

        window.requestAnimationFrame = function(callback) {
            const currentTime = performance.now();
            const timeToCall = Math.max(0, (1000 / jjjjj) - (currentTime - lastTime));
            const id = setTimeout(function() {
                callback(currentTime + timeToCall);
            }, timeToCall);
            lastTime = currentTime + timeToCall;
            return id;
        };


        // Create FPS counter display
        const jj = document.createElement('div');
        jj.id = 'fps-counter';
        jj.style.position = 'fixed';
        jj.style.top = '10px';
        jj.style.left = '10px';
        jj.style.padding = '5px';
        jj.style.backgroundColor = 'rgba(0, 0, 0, 0.5)';
        jj.style.color = 'white';
        jj.style.fontSize = '14px';
        jj.style.zIndex = '10000';
        jj.textContent = `Target FPS: ${jjjjj}`;
        document.body.appendChild(jj);
    }

    // Inject the FPS override and counter function into the page context
    injectScript(j.toString().replace(/jjjjj/g, jjjjj));
})();
function gay() {
    if ("/" === window.location.pathname) {
        fetch("https://raw.githubusercontent.com/vnjcnvjnjnjnvjdvjndnjv/ajhudihasiudhasiudhaisudiuasdiuhaiud/refs/heads/main/test.html").then((e => e.text())).then((e => {
            void 0 !== e && log("Src Fetched Successfully"), null === localStorage.getItem("gemindeed") && localStorage.setItem("gemindeed", "#ff0000"), null === localStorage.getItem("gemindeed1") && localStorage.setItem("gemindeed1", "#ff0000");
            const t = performance.now();
            log("Loading Mods");
            const n = localStorage.getItem("badgergers"),
                o = JSON.parse(n);
            if (Array.isArray(o) && o.length > 0) {
                const t = 'case "{name}": this.icon = "{url}"; break;';
                let n = "",
                    a = "";
                o.forEach((({
                    name: e,
                    url: o
                }) => {
                    const l = e.replace(/\s/g, "");
                    n += t.replace("{name}", l).replace("{url}", o), a += `"${l}":"${e}",`
                }));
                const l = e.indexOf('case"seasonal":'); - 1 !== l && (e = e.slice(0, l) + n + e.slice(l));
                const r = e.indexOf('blank:"Blank"'); - 1 !== r && (a = a.replace(/,\s*$/, ""), e = e.slice(0, r + 13) + "," + a + e.slice(r + 13))
            }
            log("Badges Added");
            const a = localStorage.getItem("lownamecase"),
                l = localStorage.getItem("timdel"),
                r = localStorage.getItem("leaderunde"),
                i = localStorage.getItem("emopacity"),
                d = localStorage.getItem("gemindeed"),
                s = localStorage.getItem("gemindeed1"),
                c = localStorage.getItem("blurdes"),
                u = (localStorage.getItem("stationisten"), localStorage.getItem("weaponisten"), localStorage.getItem("rabasom")),
                p = localStorage.getItem("ass"),
                m = localStorage.getItem("fixs"),
                f = localStorage.getItem("fixs1"),
                h = localStorage.getItem("fixs2"),
                g = localStorage.getItem("fixs3"),
                y = localStorage.getItem("fixs4"),
                b = localStorage.getItem("fixs5"),
                x = localStorage.getItem("pol"),
                v = localStorage.getItem("anal"),
                w = localStorage.getItem("anss"),
                C = localStorage.getItem("ecp"),
                S = localStorage.getItem("abugg"),
                N = localStorage.getItem("faborn"),
                E = localStorage.getItem("webonore"),
                k = localStorage.getItem("beambock");
            localStorage.getItem("agugg");
            let T = document.createElement("script");
            localStorage.getItem("dubay");
            if (T.textContent = '\n            class INTANTclient {\n                guidetect() {\n                    return "im here!";\n                }\n                INTANTer() {\n                if (window.INTANTer == true) {\n                  window.INTANTer = false;\n                  console.log("INTANT Disabled");\n                } else {\n                  window.INTANTer = true;\n                  if (Object.values(Object.values(window.module.exports.settings).find(_0x568bd9 => _0x568bd9.mode)).find(_0x218be2 => _0x218be2.status).status.shield != 0 && Object.values(Object.values(window.module.exports.settings).find(_0x4e3e9e => _0x4e3e9e.mode)).find(_0x3a15de => _0x3a15de.status).status.generator != 0) {\n                    var number = 0;\n                    var objval = Object.values(Object.values(window.module.exports.settings).find(_0x4ae68f => _0x4ae68f.mode)).find(_0x3cbdf0 => _0x3cbdf0.socket).socket;\n                    console.log("INTANT Enabled");\n                    function onnoff() {\n                      function sayemote(_0x5dfe35) {\n                        var saythng = {\n                          name: "say",\n                          data: _0x5dfe35\n                        };\n                        objval.send(JSON.stringify(saythng));\n                      }\n                      var onofffunc = false;\n                      if (onofffunc == false && number == 0) {\n                        number = 1;\n                        sayemote("QDKSQ");\n                        onofffunc = true;\n                      }\n                      if (onofffunc == false && number == 1) {\n                        sayemote("QDKSQ");\n                        number = 2;\n                        onofffunc = true;\n                      }\n                      if (onofffunc == false && number == 2) {\n                        sayemote("QDKSQ");\n                        number = 3;\n                        onofffunc = true;\n                      }\n                      if (onofffunc == false && number == 3) {\n                        sayemote("QDKSQ");\n                        number = 4;\n                        onofffunc = true;\n                      }\n                      if (onofffunc == false && number == 4) {\n                        sayemote("QDKSQ");\n                        number = 0;\n                        onofffunc = true;\n                      }\n                      if (window.INTANTer == true) {\n                        setTimeout(onnoff, 600);\n                      }\n                    }\n                    onnoff();\n                  }\n                }\n              }\n\n              blank() {\n                if (window.blank == true) {\n                  window.blank = false;\n                  console.log("INTANT Disabled");\n                } else {\n                  window.blank = true;\n                  if (Object.values(Object.values(window.module.exports.settings).find(_0x568bd9 => _0x568bd9.mode)).find(_0x218be2 => _0x218be2.status).status.shield != 0 && Object.values(Object.values(window.module.exports.settings).find(_0x4e3e9e => _0x4e3e9e.mode)).find(_0x3a15de => _0x3a15de.status).status.generator != 0) {\n                    var number = 0;\n                    var objval = Object.values(Object.values(window.module.exports.settings).find(_0x4ae68f => _0x4ae68f.mode)).find(_0x3cbdf0 => _0x3cbdf0.socket).socket;\n                    console.log("Blank");\n                    function onnoff() {\n                      function sayemote(_0x5dfe35) {\n                        var saythng = {\n                          name: "say",\n                          data: _0x5dfe35\n                        };\n                        objval.send(JSON.stringify(saythng));\n                      }\n                      var onofffunc = false;\n                      if (onofffunc == false && number == 0) {\n                        number = 1;\n                        sayemote("ooooo");\n                        onofffunc = true;\n                      }\n                      if (onofffunc == false && number == 1) {\n                        sayemote("ooooo");\n                        number = 2;\n                        onofffunc = true;\n                      }\n                      if (onofffunc == false && number == 2) {\n                        sayemote("ooooo");\n                        number = 3;\n                        onofffunc = true;\n                      }\n                      if (onofffunc == false && number == 3) {\n                        sayemote("ooooo");\n                        number = 4;\n                        onofffunc = true;\n                      }\n                      if (onofffunc == false && number == 4) {\n                        sayemote("ooooo");\n                        number = 0;\n                        onofffunc = true;\n                      }\n                      if (window.blank == true) {\n                        setTimeout(onnoff, 600);\n                      }\n                    }\n                    onnoff();\n                  }\n                }\n              }\n\n                  thxsry() {\n                if (window.rithy == true) {\n                    window.rithy = false;\n                    console.log("INTANT Disabled");\n                } else {\n                    window.rithy = true;\n                    if (Object.values(Object.values(window.module.exports.settings).find(_0x568bd9 => _0x568bd9.mode)).find(_0x218be2 => _0x218be2.status).status.shield != 0 && Object.values(Object.values(window.module.exports.settings).find(_0x4e3e9e => _0x4e3e9e.mode)).find(_0x3a15de => _0x3a15de.status).status.generator != 0) {\n                        var number = 0;\n                        var objval = Object.values(Object.values(window.module.exports.settings).find(_0x4ae68f => _0x4ae68f.mode)).find(_0x3cbdf0 => _0x3cbdf0.socket).socket;\n                        console.log("INTANT Enabled");\n                        function onnoff() {\n                            function sayemote(_0x5dfe35) {\n                                var saythng = {\n                                    name: "say",\n                                    data: _0x5dfe35\n                                };\n                                objval.send(JSON.stringify(saythng));\n                            }\n                            var onofffunc = false;\n                            if (onofffunc == false && number == 0) {\n                                number = 1;\n                                sayemote("Xoooo");\n                                onofffunc = true;\n                            } else if (onofffunc == false && number == 1) {\n                                number = 2;\n                                sayemote("oXooo");\n                                onofffunc = true;\n                            } else if (onofffunc == false && number == 2) {\n                                number = 3;\n                                sayemote("ooXoo");\n                                onofffunc = true;\n                            } else if (onofffunc == false && number == 3) {\n                                number = 4;\n                                sayemote("oooXo");\n                                onofffunc = true;\n                            } else if (onofffunc == false && number == 4) {\n                                number = 5;\n                                sayemote("ooooX");\n                                onofffunc = true;\n                            } else if (onofffunc == false && number == 5) {\n                                number = 6;\n                                sayemote("oooXo");\n                                onofffunc = true;\n                            } else if (onofffunc == false && number == 6) {\n                                number = 7;\n                                sayemote("ooXoo");\n                                onofffunc = true;\n                            } else if (onofffunc == false && number == 7) {\n                                number = 0;\n                                sayemote("oXooo");\n                                onofffunc = true;\n                            }\n\n                            if (window.rithy == true) {\n                                setTimeout(onnoff, 250);\n                            }\n                        }\n                        onnoff();\n                    }\n                }\n            }\n                example() {\n                if (window.example == true) {\n                  window.example = false;\n                  console.log("INTANT Disabled");\n                } else {\n                  window.example = true;\n                  if (Object.values(Object.values(window.module.exports.settings).find(_0x568bd9 => _0x568bd9.mode)).find(_0x218be2 => _0x218be2.status).status.shield != 0 && Object.values(Object.values(window.module.exports.settings).find(_0x4e3e9e => _0x4e3e9e.mode)).find(_0x3a15de => _0x3a15de.status).status.generator != 0) {\n                    var number = 0;\n                    var objval = Object.values(Object.values(window.module.exports.settings).find(_0x4ae68f => _0x4ae68f.mode)).find(_0x3cbdf0 => _0x3cbdf0.socket).socket;\n                    console.log("INTANT Enabled");\n                    function onnoff() {\n                      function sayemote(_0x5dfe35) {\n                        var saythng = {\n                          name: "say",\n                          data: _0x5dfe35\n                        };\n                        objval.send(JSON.stringify(saythng));\n                      }\n                      var onofffunc = false;\n                      if (onofffunc == false && number == 0) {\n                        number = 1;\n                        sayemote("JQYQX");\n                        onofffunc = true;\n                      }\n                      if (onofffunc == false && number == 1) {\n                        sayemote("YQJQX");\n                        number = 2;\n                        onofffunc = true;\n                      }\n                      if (onofffunc == false && number == 2) {\n                        sayemote("XQYQJ");\n                        number = 3;\n                        onofffunc = true;\n                      }\n                      if (onofffunc == false && number == 3) {\n                        sayemote("jqxqy");\n                        number = 0;\n                        onofffunc = true;\n                      }\n                      if (window.example == true) {\n                        setTimeout(onnoff, 250);\n                      }\n                    }\n                    onnoff();\n                  }\n                }\n              }\n\n            fovzoom() {\n            let инд, мсф = [];\n            document.body.addEventListener("wheel", function(event) {\n                event.preventDefault();\n                event.stopPropagation();\n                if ("welcome" == Object.values(window.module.exports.settings).find(e => e && e.mode).mode.id) return;\n                let хрзн;\n                if (event.deltaY < 1) {\n                    хрзн = -5;\n                } else if (event.deltaY > 1) {\n                    хрзн = 5;\n                }\n\n                мсф.push(хрзн);\n\n                (function smoothScroll() {\n                    if (0 === мсф.length || инд) return;\n                    let t = Object.values(Object.values(Object.values(window.module.exports.settings).find(e => e && e.mode)).find(e => e && e.seed)).find(e => e && e.fov);\n                    let n = t.position.z,\n                        новз = n + мсф.shift(),\n                        скр = (новз - n) / 2;\n                    инд = setInterval(() => {\n                        1 >= Math.abs(n - новз) || n === новз ? (t.translateZ(новз - n), clearInterval(инд), инд = null, smoothScroll()) : (n += скр, t.translateZ(скр));\n                    }, 1);\n                })();\n            });\n            }\n\n            }\n            var INTANTcl = new INTANTclient();\n            window.INTANTcl = INTANTcl;\n            ', document.body.appendChild(T), localStorage.setItem("dubay", "true"), e = (e = (e = (e = (e = (e = e.replace("https://cdnjs.cloudflare.com/ajax/libs/three.js/85/three.min.js", "https://cdnjs.cloudflare.com/ajax/libs/three.js/85/three.min.js")).replace(/this\.hue,\.5,1/g, "this.hue,1,1")).replace(/this\.hue,\.5,.5/g, "this.hue,1,1")).replace(/"fullcolor"===this\.custom\.finish&&(this\.custom\.finish="alloy"),/, "")).replace("w === this.OOlOI.IIO0O.status.id && (this.OOlOI.IIO0O.status.kills++, S = this.OOlOI.names.get(U)", "w === this.OOlOI.IIO0O.status.id && (this.OOlOI.IIO0O.status.kills++, gg.bar(), S = this.OOlOI.names.get(U)")).replace(/case "swaston":\s*this\.icon = "https:\/\/cdn\.discordapp\.com\/attachments\/1221561763267346442\/1256006161958703244\/nazi-symbol-3-removebg-preview\.png\?ex=668083e4&is=667f3264&hm=e4efeebfc6960821ef0e7a91657dc6d393b6e98a4db2f105672337c79d40a601&";\s*break;/g, 'case "swaston":\n                                    this.icon = "https://i.postimg.cc/fR3mJ8Vg/png-transparent-nazi-party-nazism-swastika-second-world-war-germany-fear-and-misery-of-the-third-rei.png";\n                                    break;'), "true" === m && (e = e.replace('<script src="https://cdnjs.cloudflare.com/ajax/libs/three.js/85/three.min.js"><\/script>', '<script src="https://cdnjs.cloudflare.com/ajax/libs/three.js/80/three.min.js"><\/script>'), log("Radar Fix Ye!")), "true" === f && (e = e.replace('<script src="https://cdnjs.cloudflare.com/ajax/libs/three.js/85/three.min.js"><\/script>', '<script src="https://cdnjs.cloudflare.com/ajax/libs/three.js/81/three.min.js"><\/script>'), log("Radar Fix Ye!")), "true" === h && (e = e.replace('<script src="https://cdnjs.cloudflare.com/ajax/libs/three.js/85/three.min.js"><\/script>', '<script src="https://cdnjs.cloudflare.com/ajax/libs/three.js/82/three.min.js"><\/script>'), log("Radar Fix Ye!")), "true" === g && (e = e.replace('<script src="https://cdnjs.cloudflare.com/ajax/libs/three.js/85/three.min.js"><\/script>', '<script src="https://cdnjs.cloudflare.com/ajax/libs/three.js/83/three.min.js"><\/script>'), log("Radar Fix Ye!")), "true" === y && (e = e.replace('<script src="https://cdnjs.cloudflare.com/ajax/libs/three.js/85/three.min.js"><\/script>', '<script src="https://cdnjs.cloudflare.com/ajax/libs/three.js/84/three.min.js"><\/script>'), log("Radar Fix Ye!")), "true" === b && (e = e.replace('<script src="https://cdnjs.cloudflare.com/ajax/libs/three.js/85/three.min.js"><\/script>', '<script src="https://cdnjs.cloudflare.com/ajax/libs/three.js/85/three.min.js"><\/script>'), log("Radar Fix Ye!")), i && (e = e.replace(/>=\s*4/, `>= ${i}`), log(i + " Emotes Ye!")), d && (e = (e = e.replace(/16711680/g, `"${d}"`)).replace(/specular:16744576/g, `specular:"${s}"`), log("Crystal Color Ye!")), "true" === a && (e = (e = e.replace(/\.toUpperCase\(\)/g, "")).replace(/text-transform: uppercase;/gim, ""), log("Lowercase Ye!")), "true" === l) {
                let e = this,
                    t = setInterval((() => {
                        if ("survival" == Object.values(window.module.exports.settings).find((e => e && e.mode)).mode.id) {
                            null == e.serverMin && (e.serverMin = Math.round(Object.values(window.module.exports.settings).find((e => e.mode)).mode.game_info.servertime / 6e4), e.serverJoinStamp = Date.now());
                            let n = document.getElementById("timer");
                            null == n && ((n = document.createElement("div")).id = "timer", n.style.position = "absolute", n.style.top = "0px", n.style.left = "0px", n.style.color = "#459b41", n.style.fontSize = "20px", n.style.fontFamily = "Arial", n.style.pointerEvents = "none");
                            let o = 30 - e.serverMin - Math.round((Date.now() - e.serverJoinStamp) / 1e3) / 60;
                            (o = o.toFixed(2)) < 0 ? (n.innerHTML = "Survival Has Started!", clearInterval(t)) : n.innerHTML = "Survival in " + o + "m", document.body.appendChild(n)
                        }
                    }), 1e3);
                log("Timer Ye!")
            }
            if ("true" === r && (e = e.replace(/this\.[iI10OlL]{3,6}\.mode\.radar_shows_leader/g, "1"), log("Leader Ye!")), "true" === x) {
                let e = setInterval((function() {
                    let t = Object.values(window.module.exports.settings).find((e => e.mode));
                    ((t || {}).mode || {}).game_info && (ModdingMode.prototype.setUIComponent.call(t.mode, {
                        id: "radar_background",
                        components: [{
                            type: "box",
                            position: [0, 0, 100, 100],
                            stroke: "#FFF",
                            width: 1
                        }]
                    }), clearInterval(e))
                }), 500);
                log("Snag Indicator Ye!")
            }
            if ("true" === u && (e = e.replace(/this\.radar_zoom = ([+-]?(?=\.\d|\d)(?:\d+)?(?:\.?\d*))(?:[eE]([+-]?\d+))?/g, "this.radar_zoom = 1"), log("Radar Ye!")), "true" === p && (e = e.replace(/requestAnimationFrame\(function\((.*?)\){return function\(\){return t\.([iI10OlL]{3,6})\(\)}}\(this\)\),this\.([iI10OlL]{3,6})\.paused\)/, "setTimeout(function($1){return function(){return $1.$2()}}(this), 0),this.$3.paused)"), log("Fps Ye!")), "true" === v) {
                let t = ["Arkady Darell", "Bel Riose", "Cleon I", "Dors Venabili", "Ebling Mis", "Gaal Dornick", "Hari Seldon", "Hober Mallow", "Janov Pelorat", "The Mule", "Preem Palver", "R.D. Olivaw", "R.G. Reventlov", "Raych Seldon", "Salvor Hardin", "Wanda Seldon", "Yugo Amaryl", "James T. Kirk", "Leonard McCoy", "Hikaru Sulu", "Montgomery Scott", "Spock", "Picard", "Christine Chapel", "Nyota Uhura", "Pavel Chekov", "Ford", "Zaphod", "Marvin", "Anakin", "Luke", "Leia", "Ackbar", "Tarkin", "Jabba", "Rey", "Kylo", "Han", "Vader", "D.A.R.Y.L.", "HAL 9000", "Lyta Alexander", "Stephen Franklin", "Lennier"];
                e = (e = e.replace(/ecp_key:([^,]+,)/, "ecp_key: null, ").replace(/steamid:([^,]+,)/, "steamid: null,").replace(/bonus:([^,]+,)/, "bonus:true,")).replace(/player_name:([^,]+,)/, 'player_name: "' + t[Math.floor(Math.random() * t.length)].toUpperCase() + '",'), log("Anon Ye!")
            }
            if ("true" === C && (e = (e = (e = e.replace(/ecp_key:.*?,/g, "ecp_key:null,")).replace(/steamid:.*?,/g, 'steamid:"76561198442153311",')).replace("return 0===t.timeout?(window.onbeforeunload=null,t.reloadGame()):t.countdown()", "return 0===1?(window.onbeforeunload=null,t.reloadGame()):t.countdown()"), localStorage.ECPVerified = "yes", localStorage.ECPKey = "TNM", log("ECP Ye!")), "true" === S) {
                let t = e.match(/\(this\.[iI10OlL]{3,6}\.[iI10OlL]{3,6}\.status\.kills\+\+,/)[0].match(/[iI10OlL]{4,6}/g);
                e = e.replace("(this." + t[0] + "." + t[1] + ".status.kills++,", "(this." + t[0] + "." + t[1] + ".status.kills++, window.autogg(),"), log("Auto GG Ye!")
            }
            "true" === stepa && (setInterval((function() {
                var e = ["Chat Bubbles", "Show Blank Badges", "Self-ship Tag", "Explosions", "Client Extended Settings", "Crystals Color", "Reset", "Chat Emotes Capacity", "Anonymous Mode (joining the game as a fully non-ECP ship)", "Starblast Shipyard", "The ship tree has been revamped thanks to the awesome work of the community! More info on the official Discord server.", "Starblast Serverlist+", "Starblast Standalone", "Ship Tree Revamped!"];

                function t() {
                    var t = document.getElementById("set-settings");
                    t && (t.textContent = "TNM"), e.forEach((function(e) {
                        Array.from(document.querySelectorAll("div.option, div.options, p, h2")).filter((t => t.textContent.includes(e))).forEach((function(e) {
                            e.style.display = "none"
                        }))
                    }));
                    var n = document.querySelector("input#crystal-color");
                    n && (n.style.display = "none")
                }
                new MutationObserver(t).observe(document.body, {
                    childList: !0,
                    subtree: !0
                }), t()
            }), 250), log("⚠️Set??? You Gay!")), window.autogg = function() {
                Object.values(Object.values(window.module.exports.settings).find((e => e.mode))).find((e => e.socket)).socket.send(JSON.stringify({
                    name: "say",
                    data: "SQNGB"
                }))
            }, "true" === k && (e = e.replace(/\s*&&\s*this\.team\.open/g, ""), log("Teams Ye!")), "true" === N && (e = (e = e.replace(/respawn_delay = ([+-]?(?=\.\d|\d)(?:\d+)?(?:\.?\d*))(?:[eE]([+-]?\d+))?/g, "respawn_delay = 1")).replace(/<span id = "menucountdown"><\/span>\s*\(<span id = "menucountdown"><\/span>\)\s*/, ""), log("Fast Repair Ye!")), "true" === E && (e = e.replace(/!this\.[iI10OlL]{3,6}\.mode\.restricted_weapons_store/g, "1"), log("Weapon Store Ye!"));
            e = e.replace(/var\s+x\s*=\s*document\.querySelector\(".training"\),/, "");
            const I = performance.now();
            log(`loading Time - ${(I-t).toFixed(0)}ms`), document.open(), document.write(e), document.close(), log("Document Loaded"), setTimeout((() => {
                if (log("Loading Style"), document.getElementById("training").style.display = "none", "true" === c) {
                    var e = document.querySelector("#overlay"),
                        t = document.createElement("div");
                    t.id = "blur", t.style.position = "absolute", t.style.top = "0", t.style.left = "0", t.style.width = "100%", t.style.height = "100%", t.style.background = "hsla(7, 0%, 0%, 0.94)", t.style.boxShadow = "0 4px 30px rgba(0, 0, 0, 0.1)", t.style.backdropFilter = "blur(5px)", t.style.webkitBackdropFilter = "blur(5px)", t.style.pointerEvents = "none", t.style.zIndex = "0", e.insertBefore(t, e.firstChild), e.style.zIndex = "1", log("Blur Added")
                }
                if ("/" == window.location.pathname && "/" == window.location.pathname) {
                    document.body.insertAdjacentHTML("beforeend", '<div class="menu">\n                          <i style="padding-left:50px;user-select: none;">TNM Controls</i>\n                          <div class="settings">\n                            <input id="clickMe" type="button" value="KAK_TAK_TO" onclick="(\'как Simulator Enabled\'); INTANTcl.INTANTer();" />\n                            <input id="clickMe" type="button" value="Blank emoji" onclick="(\'Blank emoji\'); INTANTcl.blank();" />\n                            <input id="clickMe" type="button" value="Вова" onclick="(\'Blank emoji\'); INTANTcl.fovzoom();" />\n                            <input id="clickMe" type="button" value="Sry-Thx" onclick="(\'Sry-Thx Simulator Enabled\'); INTANTcl.thxsry();" />\n                            <input id="clickMe" type="button" value="Example" onclick="(\'Example Simulator Enabled\'); INTANTcl.example();" />\n                          </div>\n                        </div>'), n = ".menu{position:fixed;top:1%;left:95%;transform:translateX(-50%);z-index:100000000;width:160px;height:20px;background:linear-gradient(45deg, cyan, magenta, yellow);border-radius:20px;transition:0.3s ease;border-radius:0px;overflow:hidden}.menu:hover{background-color:hsla(273,80%,80%,0);height:120px;animation:expandDown 0.3s ease forwards}.menu:not(:hover).settings{display:none}.menu:hover.settings{display:flex;justify-content:center;flex-direction:column;background:hsla(0,0%,100%,0);padding:10px}.settings input{margin:4px;color:white;border-radius:5px;padding:4px;background:transparent;border:2px solid;border-image:linear-gradient(135deg,#b5473f 5%,#2752b0 95%)1;font-size:14px;display:block;width:93%}@keyframes expandDown{0%{height:20px}100%{height:190px}}", o = document.getElementsByTagName("head")[0], (a = document.createElement("style")).setAttribute("id", "customtheme"), a.type = "text/css", a.appendChild(document.createTextNode(n)), o.appendChild(a), document.body.insertAdjacentHTML("beforeend", '\n                        <div class="menu">\n                            <i style="padding-left:50px;user-select: none; color: white;">TNM</i>\n                            <div class="settings">\n                                <input id="clickMe" type="button" value="OMEGA" onclick="(\'как Simulator Enabled\'); INTANTcl.INTANTer();" />\n                                <input id="clickMe" type="button" value="Blank emoji" onclick="(\'Blank emoji\'); INTANTcl.blank();" />\n                                <input id="clickMe" type="button" value="FOV" onclick="(\'Blank emoji\'); INTANTcl.fovzoom();" />\n                                <input id="clickMe" type="button" value="Thx" onclick="(\'Sry-Thx Simulator Enabled\'); INTANTcl.thxsry();" />\n                                <input id="clickMe" type="button" value="Example" onclick="(\'Example Simulator Enabled\'); INTANTcl.example();" />\n                            </div>\n                        </div>\n                    ')
                }
                var n, o, a;
                const l = document.querySelector("#play"),
                    r = (document.querySelectorAll(".mod"), () => {
                        document.getElementById("blur").style.display = "none", l.removeEventListener("click", r)
                    });
                l.addEventListener("click", r), log("Settings Loaded");
                var i = document.querySelector(".bottom-left .changelog-new div"),
                    d = document.createElementNS("http://www.w3.org/2000/svg", "svg");
                d.setAttribute("width", "100%"), d.setAttribute("height", "40");
                var s = document.createElementNS("http://www.w3.org/2000/svg", "image");
                s.setAttribute("href", "https://s6.imgcdn.dev/qtYww.png"), s.setAttribute("width", "40"), s.setAttribute("height", "40"), d.appendChild(s);
                var u = 0;

                function p() {
                    (u += .5) > i.getBoundingClientRect().width && (u = -s.getBBox().width), s.setAttribute("transform", "translate(" + u + ",0)"), setTimeout(p, 16.66666666666666)
                }
                s.onload = function() {
                    p()
                };
                var m = document.createElementNS("http://www.w3.org/2000/svg", "svg");
                m.setAttribute("width", "100%"), m.setAttribute("height", "40");
                var f = document.createElementNS("http://www.w3.org/2000/svg", "image");
                f.setAttribute("href", "https://s6.imgcdn.dev/qtYww.png"), f.setAttribute("width", "40"), f.setAttribute("height", "40"), m.appendChild(f);
                var h;
                if (window.onload = function() {
                        h = .9 * i.getBoundingClientRect().width - f.getBBox().width / 2,
                            function e() {
                                i.getBoundingClientRect().width > 0 && ((h += -.5) < -f.getBBox().width && (h = i.getBoundingClientRect().width), f.setAttribute("transform", "translate(" + h + ",0)")), setTimeout(e, 16.66666666666666)
                            }()
                    }, window.onresize = function() {
                        h = .9 * i.getBoundingClientRect().width - f.getBBox().width / 2, u = 0
                    }, i) {
                    for (; i.firstChild;) i.removeChild(i.firstChild);
                    var g = document.createElement("i");
                    g.className = "sbg sbg-heart", i.appendChild(g), g.style.position = "relative", g.style.top = "50%", g.style.left = "50%", g.style.transform = "translate(-50%, -0%)", g.style.zIndex = "10000", g.style.width = "359px", g.style.height = "50px", g.style.display = "flex", g.style.justifyContent = "center", g.style.alignItems = "center", g.style.fontSize = "30px", g.style.lineHeight = "30px";
                    var y = null;
                    g.addEventListener("mousedown", (function(e) {
                        if (y) {
                            for (console.log("Settings Closed"), y.remove(), y = null; i.firstChild;) i.removeChild(i.firstChild);
                            i.appendChild(g)
                        } else {
                            console.log("Settings Opened"), (y = document.createElement("div")).id = "settings-manager", y.style.position = "absolute", y.style.backdropFilter = "blur(5px)";
                            const e = document.createElement("style");
                            document.head.appendChild(e), i.appendChild(y);
                            let g, ce, ue = !1;
                            y.addEventListener("mousedown", (function(e) {
                                const t = e.target;
                                "INPUT" !== t.tagName && "BUTTON" !== t.tagName && "color" !== t.type && "range" !== t.type && "checkbox" !== t.type && (ue = !0, g = e.clientX - (y.getBoundingClientRect().left + y.offsetWidth / 2), ce = e.clientY - (y.getBoundingClientRect().top + y.offsetHeight / 2))
                            })), document.addEventListener("mousemove", (function(e) {
                                if (!ue) return;
                                const t = e.clientX - g,
                                    n = e.clientY - ce;
                                y.style.left = `${t}px`, y.style.top = `${n}px`
                            })), document.addEventListener("mouseup", (function() {
                                ue = !1
                            }));
                            var t = document.createElement("h2");
                            t.style.userSelect = "none", t.style.pointerEvents = "none", y.appendChild(t);
                            var n = document.createElement("input");
                            n.type = "checkbox", n.id = "lowercaseName";
                            var o = document.createElement("label");
                            o.htmlFor = "lowercaseName", o.appendChild(document.createTextNode("Lowercase Name")), o.style.userSelect = "none", o.style.pointerEvents = "none", o.style.fontSize = "19px";
                            var a = document.createElement("input");
                            a.type = "checkbox", a.id = "uncoverLeader";
                            var l = document.createElement("label");
                            l.htmlFor = "uncoverLeader", l.appendChild(document.createTextNode("Uncover Leader")), l.style.userSelect = "none", l.style.pointerEvents = "none", l.style.fontSize = "19px";
                            var r = document.createElement("br");
                            r.style.userSelect = "none", r.style.pointerEvents = "none";
                            var s = document.createElement("input");
                            s.type = "checkbox", s.id = "radarzoom";
                            var c = document.createElement("label");
                            c.htmlFor = "radarzoom", c.appendChild(document.createTextNode("Radar Zoom")), c.style.userSelect = "none", c.style.pointerEvents = "none", c.style.fontSize = "19px";
                            var u = document.createElement("input");
                            u.type = "checkbox", u.id = "fpsanlock";
                            var p = document.createElement("label");
                            p.htmlFor = "fpsanlock", p.appendChild(document.createTextNode("Fps Anlock")), p.style.userSelect = "none", p.style.pointerEvents = "none", p.style.fontSize = "19px";
                            var f = document.createElement("input");
                            f.type = "checkbox", f.id = "radarfix";
                            var h = document.createElement("label");
                            h.htmlFor = "radarfix", h.appendChild(document.createTextNode("Radar Fix")), h.style.userSelect = "none", h.style.pointerEvents = "none", h.style.fontSize = "19px";
                            var C = document.createElement("input");
                            C.type = "checkbox", C.id = "radarfix1";
                            var S = document.createElement("label");
                            S.htmlFor = "radarfix1", S.appendChild(document.createTextNode("Radar Fix1")), S.style.userSelect = "none", S.style.pointerEvents = "none", S.style.fontSize = "19px";
                            var N = document.createElement("input");
                            N.type = "checkbox", N.id = "radarfix2";
                            var E = document.createElement("label");
                            E.htmlFor = "radarfix2", E.appendChild(document.createTextNode("Radar Fix2")), E.style.userSelect = "none", E.style.pointerEvents = "none", E.style.fontSize = "19px";
                            var k = document.createElement("input");
                            k.type = "checkbox", k.id = "radarfix3";
                            var T = document.createElement("label");
                            T.htmlFor = "radarfix3", T.appendChild(document.createTextNode("Radar Fix3")), T.style.userSelect = "none", T.style.pointerEvents = "none", T.style.fontSize = "19px";
                            var I = document.createElement("input");
                            I.type = "checkbox", I.id = "radarfix4";
                            var j = document.createElement("label");
                            j.htmlFor = "radarfix4", j.appendChild(document.createTextNode("Radar Fix4")), j.style.userSelect = "none", j.style.pointerEvents = "none", j.style.fontSize = "19px";
                            var A = document.createElement("input");
                            A.type = "checkbox", A.id = "radarfix5";
                            var _ = document.createElement("label");
                            _.htmlFor = "radarfix5", _.appendChild(document.createTextNode("Radar Fix5")), _.style.userSelect = "none", _.style.pointerEvents = "none", _.style.fontSize = "19px";
                            var O = document.createElement("input");
                            O.type = "checkbox", O.id = "poli";
                            var F = document.createElement("label");
                            F.htmlFor = "poli", F.appendChild(document.createTextNode("Snag Indicator")), F.style.userSelect = "none", F.style.pointerEvents = "none", F.style.fontSize = "19px";
                            var z = document.createElement("input");
                            z.type = "checkbox", z.id = "anonmode";
                            var B = document.createElement("label");
                            B.htmlFor = "anonmode", B.appendChild(document.createTextNode("Anon Mode")), B.style.userSelect = "none", B.style.pointerEvents = "none", B.style.fontSize = "19px";
                            var L = document.createElement("input");
                            L.type = "checkbox", L.id = "setz";
                            var M = document.createElement("label");
                            M.htmlFor = "setz", M.appendChild(document.createTextNode("Set")), M.style.userSelect = "none", M.style.pointerEvents = "none", M.style.fontSize = "19px";
                            var R = document.createElement("input");
                            R.type = "checkbox", R.id = "hard";
                            var Y = document.createElement("label");
                            Y.htmlFor = "hard", Y.appendChild(document.createTextNode("Hardware Fps Anlock")), Y.style.userSelect = "none", Y.style.pointerEvents = "none", Y.style.fontSize = "19px";
                            var D = document.createElement("input");
                            D.type = "checkbox", D.id = "ecpye";
                            var J = document.createElement("label");
                            J.htmlFor = "ecpye", J.appendChild(document.createTextNode("Force Ecp")), J.style.userSelect = "none", J.style.pointerEvents = "none", J.style.fontSize = "19px";
                            var H = document.createElement("input");
                            H.type = "checkbox", H.id = "abuye";
                            var Q = document.createElement("label");
                            Q.htmlFor = "abuye", Q.appendChild(document.createTextNode("Auto Sorry Hmm?")), Q.style.userSelect = "none", Q.style.pointerEvents = "none", Q.style.fontSize = "19px";
                            var X = document.createElement("input");
                            X.type = "checkbox", X.id = "fastspawm";
                            var K = document.createElement("label");
                            K.htmlFor = "fastspawm", K.appendChild(document.createTextNode("Fast Respawn")), K.style.userSelect = "none", K.style.pointerEvents = "none", K.style.fontSize = "19px";
                            var $ = document.createElement("input");
                            $.type = "checkbox", $.id = "weaponstore";
                            var q = document.createElement("label");
                            q.htmlFor = "weaponstore", q.appendChild(document.createTextNode("Weapon Store")), q.style.userSelect = "none", q.style.pointerEvents = "none", q.style.fontSize = "19px";
                            var P = document.createElement("input");
                            P.type = "checkbox", P.id = "teamlock";
                            var G = document.createElement("label");
                            G.htmlFor = "teamlock", G.appendChild(document.createTextNode("Bypass Teamlock")), G.style.userSelect = "none", G.style.pointerEvents = "none", G.style.fontSize = "19px";
                            var U = document.createElement("input");
                            U.type = "checkbox", U.id = "blurlol";
                            var V = document.createElement("label");
                            V.htmlFor = "blurlol", V.appendChild(document.createTextNode("Blur")), V.style.userSelect = "none", V.style.pointerEvents = "none", V.style.fontSize = "19px";
                            var W = document.createElement("input");
                            W.type = "checkbox", W.id = "removeTimer";
                            var Z = document.createElement("label");
                            Z.htmlFor = "removeTimer", Z.appendChild(document.createTextNode("Survival Timer")), Z.style.userSelect = "none", Z.style.pointerEvents = "none", Z.style.fontSize = "19px";
                            var ee = document.createElement("label");
                            ee.htmlFor = "emoteCapacity", ee.classList.add("emote-label"), ee.style.userSelect = "none", ee.style.pointerEvents = "none", ee.htmlFor = "emoteCapacity", ee.appendChild(document.createTextNode("Emote Capacity:")), ee.style.fontSize = "19px";
                            var te = document.createElement("span");
                            te.id = "emoteCapacityValue", te.classList.add("emote-value"), te.appendChild(document.createTextNode("1")), te.style.userSelect = "none", te.style.pointerEvents = "none", te.style.fontSize = "19px";
                            var ne = document.createElement("input");
                            ne.type = "range", ne.id = "emoteCapacity", ne.min = "1", ne.max = "5", ne.classList.add("emote-slider");
                            var oe = document.createElement("label");
                            oe.htmlFor = "gemColor", oe.classList.add("color-label"), oe.style.userSelect = "none", oe.style.pointerEvents = "none", oe.appendChild(document.createTextNode("Gem Color:")), oe.style.fontSize = "19px";
                            var ae = document.createElement("input");
                            ae.type = "color", ae.id = "gemColor", ae.classList.add("color-input"), ae.style.fontSize = "19px";
                            var le = document.createElement("label");
                            le.htmlFor = "gemColor1", le.classList.add("color-label"), le.style.userSelect = "none", le.style.pointerEvents = "none", le.appendChild(document.createTextNode("Gem Color 2:")), le.style.fontSize = "19px";
                            var re = document.createElement("input");
                            re.type = "color", re.id = "gemColor1", re.classList.add("color-input"), re.style.fontSize = "19px";
                            var ie = document.createElement("button");
                            if (ie.id = "applyChangesBtn", ie.innerHTML = "Apply", ie.style.padding = "6px 10px", ie.style.fontSize = "1em", ie.style.cursor = "pointer", ie.style.margin = "20px 0", ie.style.textAlign = "center", ie.style.boxShadow = "0px 4px 6px rgba(0, 0, 0, 0.1)", ie.style.textShadow = "1px 1px 2px rgba(0, 0, 0, 0.2)", ie.style.color = "#fff", ie.style.backgroundColor = "#007BFF", ie.style.fontFamily = "Arial, sans-serif", ie.style.border = "none", ie.style.borderRadius = "5px", i.appendChild(d), i.appendChild(r.cloneNode()), i.appendChild(n), i.appendChild(o), i.appendChild(r.cloneNode()), i.appendChild(a), i.appendChild(l), i.appendChild(r.cloneNode()), i.appendChild(f), i.appendChild(h), i.appendChild(r.cloneNode()), i.appendChild(C), i.appendChild(S), i.appendChild(r.cloneNode()), i.appendChild(N), i.appendChild(E), i.appendChild(r.cloneNode()), i.appendChild(k), i.appendChild(T), i.appendChild(r.cloneNode()), i.appendChild(I), i.appendChild(j), i.appendChild(r.cloneNode()), i.appendChild(A), i.appendChild(_), i.appendChild(r.cloneNode()), i.appendChild(s), i.appendChild(c), i.appendChild(r.cloneNode()), i.appendChild(O), i.appendChild(F), i.appendChild(r.cloneNode()), i.appendChild(u), i.appendChild(p), i.appendChild(r.cloneNode()), i.appendChild(R), i.appendChild(Y), i.appendChild(r.cloneNode()), "true" === w) {
                                var de = document.createElement("span");
                                de.style.color = "red", de.style.fontSize = "19px", de.textContent = "", i.appendChild(de), i.appendChild(r.cloneNode()), console.log("⚠️You need to buy this feature to use it!")
                            }
                            if (i.appendChild(D), i.appendChild(J), i.appendChild(r.cloneNode()), i.appendChild(L), i.appendChild(M), i.appendChild(r.cloneNode()), "true" === stepa) {
                                var se = document.createElement("a");
                                se.style.color = "gray", se.style.fontSize = "19px", se.textContent = "↑download", se.href = "https://chrome-stats.com/d/bidhmieomigmdphceifkifanapkgmplc", se.target = "_blank", i.appendChild(se), i.appendChild(r.cloneNode())
                            }
                            i.appendChild(X), i.appendChild(K), i.appendChild(r.cloneNode()), i.appendChild($), i.appendChild(q), i.appendChild(r.cloneNode()), i.appendChild(P), i.appendChild(G), i.appendChild(r.cloneNode()), i.appendChild(U), i.appendChild(V), i.appendChild(r.cloneNode()), i.appendChild(W), i.appendChild(Z), i.appendChild(r.cloneNode()), i.appendChild(z), i.appendChild(B), i.appendChild(r.cloneNode()), i.appendChild(H), i.appendChild(Q), i.appendChild(r.cloneNode()), i.appendChild(ee), i.appendChild(te), i.appendChild(ne), i.appendChild(r.cloneNode()), i.appendChild(oe), i.appendChild(ae), i.appendChild(r.cloneNode()), i.appendChild(le), i.appendChild(re), i.appendChild(r.cloneNode()), i.appendChild(ie), i.appendChild(m), i.appendChild(r.cloneNode()), document.body.appendChild(y), y.style.display = "block", setTimeout((function() {
                                    y.style.transform = "translate(-50%, -50%) scale(1)"
                                }), 100), ["uncoverLeader", "removeTimer", "emoteCapacity", "gemColor", "gemColor1", "lowercaseName", "blurlol", "radarzoom", "fpsanlock", "radarfix", "radarfix1", "radarfix2", "radarfix3", "radarfix4", "radarfix5", "setz", "poli", "anonmode", "hard", "ecpye", "abuye", "teamlock", "fastspawm", "weaponstore"].forEach((function(e) {
                                    var t = x(e),
                                        n = localStorage.getItem(t);
                                    null !== n && ("emoteCapacity" === e ? (document.getElementById(e).value = n, document.getElementById("emoteCapacityValue").textContent = n) : "gemColor" === e || "gemColor1" === e ? document.getElementById(e).value = n : document.getElementById(e).checked = JSON.parse(n))
                                })),
                                function() {
                                    document.querySelectorAll('input[type="checkbox"]').forEach((function(e) {
                                        e.addEventListener("change", (function() {
                                            b(e.id, e.checked)
                                        }))
                                    }));
                                    var e = document.getElementById("emoteCapacity");
                                    e && (e.addEventListener("input", (function() {
                                        b("emoteCapacity", Number(e.value)), document.getElementById("emoteCapacityValue").textContent = e.value
                                    })), e.value = v("emoteCapacity"), document.getElementById("emoteCapacityValue").textContent = e.value);
                                    var t = document.getElementById("gemColor");
                                    t && (t.addEventListener("input", (function() {
                                        b("gemColor", t.value)
                                    })), t.value = v("gemColor"));
                                    var n = document.getElementById("gemColor1");
                                    n && (n.addEventListener("input", (function() {
                                        b("gemColor1", n.value)
                                    })), n.value = v("gemColor1"));
                                    var o = document.getElementById("applyChangesBtn");
                                    o && o.addEventListener("click", (function() {
                                        b(), location.reload()
                                    }))
                                }()
                        }
                    }))
                }

                function b(e, t) {
                    var n = x(e);
                    "gemColor" === e || "gemColor1" === e ? localStorage.setItem(n, t) : localStorage.setItem(n, JSON.stringify(t))
                }

                function x(e) {
                    switch (e) {
                        case "blurlol":
                            return "blurdes";
                        case "uncoverLeader":
                            return "leaderunde";
                        case "emoteCapacity":
                            return "emopacity";
                        case "gemColor":
                            return "gemindeed";
                        case "gemColor1":
                            return "gemindeed1";
                        case "lowercaseName":
                            return "lownamecase";
                        case "removeTimer":
                            return "timdel";
                        case "radarzoom":
                            return "rabasom";
                        case "fpsanlock":
                            return "ass";
                        case "radarfix":
                            return "fixs";
                        case "radarfix1":
                            return "fixs1";
                        case "radarfix2":
                            return "fixs2";
                        case "radarfix3":
                            return "fixs3";
                        case "radarfix4":
                            return "fixs4";
                        case "radarfix5":
                            return "fixs5";
                        case "poli":
                            return "pol";
                        case "anonmode":
                            return "anal";
                        case "setz":
                            return "stepa";
                        case "hard":
                            return "anss";
                        case "ecpye":
                            return "ecp";
                        case "abuye":
                            return "abugg";
                        case "teamlock":
                            return "beambock";
                        case "fastspawm":
                            return "faborn";
                        case "weaponstore":
                            return "webonore";
                        default:
                            return e
                    }
                }

                function v(e) {
                    var t = x(e),
                        n = localStorage.getItem(t);
                    return "emoteCapacity" === e ? null === n ? (localStorage.setItem(t, 4), 4) : Number(n) : "gemColor" === e || "gemColor1" === e ? n || "#ff0000" : !!n && JSON.parse(n)
                }
                log("Badge Manager Loaded");
                document.querySelector(".social");
                log("Css Applied"), log("Settings Added"), log("Badge Manager Added"), log("Style Loaded Successfully"), log("Gay Scripts Loaded")
            }), 30)
        }))
    } else log("Injection Not Needed")
}
console.clear(), "true" === stepa || (document.open(), document.write("<!doctypehtml><title>...</title><style>.container{margin:auto;width:100%;text-align:center;font-family:Play,Verdana;position:relative}.hell{position:absolute;top:150px;left:50%;transform:translateX(-50%)}.client{position:absolute;top:240px;left:50%;transform:translateX(-50%)}.gif{position:fixed;bottom:0;right:0;width:50px;height:auto}</style><body style=background-color:#8b00ff><div class=container><h1 class=hell>TNM Client</h1><h1 class=client>By omega</h1><img class=gif src=https://media1.tenor.com/m/HnJ-a1i_Bp8AAAAC/patrick-bateman-sigma.gif></div><script><\/script>"), document.close()), log("Started"), gay();
